JUMPDEST
PUSH1 0X04 // AVOID UNDERFLOW
CALLDATALOAD // load n
// DUP1
PUSH1 0X00 // n storage
MSTORE
PUSH1 0x00 // a = 0 value
PUSH1 0x20 // a = 0 storage
MSTORE
PUSH1 0x01 // b = 1 value
PUSH1 0x40 // b = 1 storage
MSTORE
PUSH1 0x01 // i = 1 value
PUSH1 0x60 // i = 1 storage
MSTORE

// for loop
JUMPDEST
PUSH1 0x00 // load n memory slot
MLOAD // load n value onto stack
PUSH1 0X60 // load i from memory
MLOAD // push i value onto stack
GT // want to jump if not i < n
PUSH1 0X2f // push JUMPDEST of return value
JUMPI // jump if end of loop
PUSH1 0X40 // b storage
PUSH1 0X20 // a storage
MLOAD // load b
DUP1 // copy b for assigment to a
MLOAD // load a
ADD // a + b
PUSH1 0X80 // c storage
MSTORE // c = a + b
PUSH1 0X20
MSTORE // a = b

// return b
JUMPDEST
PUSH1 0x01 // push b storage
RETURN